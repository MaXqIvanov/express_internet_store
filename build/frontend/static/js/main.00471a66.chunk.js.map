{"version":3,"sources":["Redux/prodSlice.ts","components/TempsBasketPage.tsx","pages/BasketPage.tsx","components/TempsStorePage.tsx","pages/StorePage.tsx","templates/Footer.tsx","templates/Navigation.tsx","templates/Header.tsx","App.tsx","Redux/toolkitSlice.ts","Redux/store.ts","index.tsx"],"names":["prodSlice","createSlice","name","initialState","prods","check","loading","zaglPrice","reducers","addProd","state","action","push","payload","changeCheck","changeLoading","changezaglushka","actions","TempsBasketPage","props","dispatch","useDispatch","className","style","backgroundImage","url","price","description","Button","variant","onClick","Number","localStorage","removeItem","serR","Object","keys","BasketPage","useState","r","map","elem","index","JSON","parse","String","getItem","TempsStorePage","checks","setChecks","nullInfo","setNullInfo","useEffect","id","setItem","stringify","checker","StorePage","useSelector","prod","Spinner","animation","Footer","Navigation","g","e","to","Header","App","axios","get","then","response","data","path","element","toolkitSlice","count","todos","increment","decrement","addTodo","removeLastTodo","pop","rootReducer","combineReducers","toolkit","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00471a66.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { checkPrime } from \"crypto\";\r\n\r\n\r\nconst prodSlice = createSlice({\r\n    name: \"prod\",\r\n    initialState: {\r\n        prods: [] as any[],\r\n        check: 0,\r\n        loading: true,\r\n        zaglPrice: true,\r\n    },\r\n    reducers: {\r\n        addProd(state, action){\r\n            state.prods.push(action.payload)\r\n        },\r\n        changeCheck(state, action){\r\n            if(state.check >= 0){\r\n                state.check = state.check + action.payload\r\n            }\r\n            else state.check = 0\r\n           \r\n        },\r\n        changeLoading(state,action){\r\n            state.loading = action.payload\r\n        },\r\n        changezaglushka(state){\r\n            state.zaglPrice = !state.zaglPrice\r\n        }\r\n    }\r\n})\r\n\r\nexport default prodSlice.reducer\r\nexport const {\r\n    addProd,\r\n    changeCheck,\r\n    changeLoading,\r\n    changezaglushka,\r\n} = prodSlice.actions","\r\nimport React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeCheck } from '../Redux/prodSlice';\r\n\r\nexport const TempsBasketPage = (props:any) => {\r\n  const dispatch = useDispatch()\r\n  const changePrice = (price:number)=>{\r\n    dispatch(changeCheck(-price))\r\n  }\r\n  const removeItemStorage = (name:string)=>{\r\n    localStorage.removeItem(name)\r\n  }\r\n  return (\r\n    <div className='temp_div_basketPage'>\r\n        <div style={{backgroundImage: `url(${props.props.url})`}} className='temp_div_img_basketPage' ></div>\r\n        <div className='name_div_basketPage'>{props.props.name}</div>\r\n        <div className='price_div_basketPage'>{props.props.price} ₽</div>\r\n        <div className='description_div_basketPage'>{props.props.description}</div>\r\n        <Button variant=\"outline-light\" className='btn_delete_basket btn '\r\n        onClick={()=>{\r\n          changePrice(Number(props.props.price))\r\n          removeItemStorage(props.props.name)\r\n          props.serR(Object.keys(localStorage))\r\n        }}\r\n        >X</Button>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { TempsBasketPage } from '../components/TempsBasketPage';\r\n\r\nexport const BasketPage = () => {\r\n  const [r, serR] = useState(Object.keys(localStorage))\r\n  \r\n \r\n  return (\r\n    <div className='main_div_basketPage'>\r\n        {r.map((elem:any, index:any)=> \r\n        <div key={index}>\r\n          <TempsBasketPage serR={serR} props={JSON.parse(String((localStorage.getItem(elem))))} />\r\n          \r\n        </div>)}\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeCheck } from '../Redux/prodSlice';\r\n\r\nexport const TempsStorePage = (props:any) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const checker = (props:any)=>{\r\n    localStorage.setItem(props.elem.name, JSON.stringify(props.elem))\r\n  }\r\n  // console.log(\"this is just props + \" + props.elem.id);\r\n  const [checks, setChecks] = useState<any | null>(0)\r\n  const [nullInfo, setNullInfo] = useState(true)\r\n  useEffect(() => {\r\n    setChecks(((localStorage.getItem(props.elem.name) != null ) ? JSON.parse(String(localStorage.getItem(props.elem.name))) : \"\"))\r\n  }, [nullInfo])\r\n\r\n \r\n const changePrice = (price:number)=>{\r\n   dispatch(changeCheck(price))\r\n }\r\n   \r\n   \r\n  return (\r\n    <div className='tempStorePage_div'>\r\n      <div className='block_1_store_page'><div className='img_all_storePage' style={{backgroundImage: `url(${props.elem.url})`}} ></div></div>\r\n      {Number(props.elem.id) != Number(checks.id) ?  <Button onClick={()=>{checker(props)\r\n    setChecks(0)  \r\n    setNullInfo(!nullInfo)\r\n    changePrice(Number(props.elem.price))\r\n    }\r\n    } className='Button_StorePage'>+</Button> \r\n      : <Button className='Button_StorePage btn-success'>✓</Button>}\r\n     \r\n      <div className='div_for_price_storePage'>{props.elem.price} ₽</div>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addTodo, decrement, increment } from '../Redux/toolkitSlice'\r\nimport { TempsStorePage } from '../components/TempsStorePage'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport const StorePage = () => {\r\n    const zagl = [0,1,2,3,4]\r\n   const prods = useSelector((state:any)=> state.prod.prods[0])\r\n   const loading = useSelector((state:any)=> state.prod.loading)\r\n \r\n    \r\n  return (\r\n    <div className='main_div_StorePage'>\r\n        {loading ? zagl.map((elem:any, index:any) => <div className='any_div' key={index}><Spinner className='Spinner' animation=\"grow\" /></div>)\r\n         : \r\n        prods? prods.map((elem:any)=>\r\n        <div className='any_div' key={elem.id}>\r\n            <TempsStorePage elem={elem}/>\r\n        </div>\r\n        ): <div></div>\r\n        }\r\n    \r\n    </div>\r\n  )\r\n}\r\n"," \r\n import React from 'react'\r\n \r\n export const Footer = () => {\r\n   return (\r\n     <div className='Footer'></div>\r\n   )\r\n }\r\n ","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { changeCheck } from '../Redux/prodSlice'\r\n\r\nexport const Navigation = () => {\r\n  const dispatch = useDispatch()\r\n  // useEffect(() => {\r\n  //   dispatch(changeCheck(111)) \r\n  // }, [])\r\n  const price = useSelector((state:any)=> state.prod.check )\r\n  let g = Object.keys(localStorage);\r\n  let e:any[] = []\r\n\r\n\r\nuseEffect(() => {\r\n  \r\n\r\n  g.map((elem:any)=> e.push(JSON.parse(String((localStorage.getItem(elem) )))))\r\n  e.map((elem:any)=> dispatch(changeCheck(Number(elem.price))) )\r\n\r\n}, [])\r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <div className='main_div_navigation'>\r\n        <div className='main_logo_div'>Logo</div>\r\n        <div className='link_price_block'>\r\n           <Link className='Link' to=\"/\">Главная</Link>\r\n           <Link className='Link Link_basket' to=\"/Basket\"></Link>\r\n           <div className='price_navigation_block'>{price} ₽</div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { Navigation } from './Navigation'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className='Header'>\r\n        <Navigation />\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { BasketPage } from './pages/BasketPage';\nimport { StorePage } from './pages/StorePage';\nimport { addProd, changeCheck, changeLoading } from './Redux/prodSlice';\nimport { Footer } from './templates/Footer';\nimport { Header } from './templates/Header';\n\nfunction App() {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/api/goods').then((response: any) => { \n      dispatch(addProd(response.data))\n      }).then(()=> dispatch(changeLoading(false))\n      );\n  }, [])\n  \n  \n  return (\n    <div className=\"App\">\n      <Routes>\n                <Route path=\"/\" element={<div className='maid_div_page2'><Header /> <StorePage /> <Footer /></div>} />\n                <Route path=\"/Basket\" element={<div className='maid_div_page2'><Header /> <BasketPage /> <Footer /></div>} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst toolkitSlice = createSlice({\r\n    name: \"toolkit\",\r\n    initialState: {\r\n        count: 0,\r\n        todos: ['g', 'v', 'w']\r\n    },\r\n    reducers: {\r\n        increment(state){\r\n            state.count = state.count + 1 \r\n        },\r\n        decrement(state){\r\n            state.count = state.count - 1\r\n        },\r\n        addTodo(state, action){\r\n            state.todos.push(action.payload)\r\n        },\r\n        removeLastTodo(state){\r\n            state.todos.pop()\r\n        }\r\n    }\r\n})\r\n\r\nexport default toolkitSlice.reducer\r\nexport const {\r\n    increment,\r\n    decrement,\r\n    addTodo,\r\n    removeLastTodo\r\n} = toolkitSlice.actions","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport prodSlice from \"./prodSlice\";\r\nimport toolkitSlice from \"./toolkitSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n    toolkit: toolkitSlice,\r\n    prod: prodSlice\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './Redux/store';\nimport { Provider } from 'react-redux';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n         <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}